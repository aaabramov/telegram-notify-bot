apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram-notify-service
spec:
  selector:
    matchLabels:
      app: telegram-notify-service
  replicas: 1
  template:
    metadata:
      labels:
        app: telegram-notify-service
    spec:
      containers:
        - name: telegram-notify
          image: eu.gcr.io/requeue/telegram-bot-notify:0.1.1-local-SNAPSHOT
          imagePullPolicy: Always
          env:
            - name: JAVA_OPTS
              value: '-Dconfig.resource=production.conf'
            - name: BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  key: bot-token
                  name: bot-credentials
            - name: WEBHOOK_URL
              value: 'https://requeue.xyz/telegram/'
            - name: WEBHOOK_PORT
              value: '8000'
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: psql-req-credentials
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: psql-req-credentials
                  key: password
          ports:
            - containerPort: 8000
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.14
          imagePullPolicy: IfNotPresent
          command:
            - /cloud_sql_proxy
            - -instances=requeue:europe-west1:requeue-dev=tcp:5432
            - -credential_file=/secrets/cloudsql/credentials.json
          volumeMounts:
            - name: cloudsql-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-credentials
          secret:
            secretName: cloudsql-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: telegram-notify-service
  labels:
    app: telegram-notify-service
spec:
  type: NodePort
  selector:
    app: telegram-notify-service
  ports:
    - name: http-telegram-notify
      port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: Secret
metadata:
  name: bot-credentials
type: Opaque
data:
  bot-token: ABCDE